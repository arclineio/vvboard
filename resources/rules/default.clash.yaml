mode: rule
ipv6: true
allow-lan: true
bind-address: "*"
mixed-port: 7890
log-level: error
unified-delay: true
tcp-concurrent: true
external-controller: 0.0.0.0:9090

tun:
  enable: true
  stack: system
  auto-route: true

dns:
  enable: true
  cache-algorithm: arc
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - "*.lan"
    - "lens.l.google.com"
    - "*.srv.nintendo.net"
    - "*.stun.playstation.net"
    - "xbox.*.*.microsoft.com"
    - "*.xboxlive.com"
    - "*.msftncsi.com"
    - "*.msftconnecttest.com"
  default-nameserver:
    - 119.29.29.29
    - 223.5.5.5
  nameserver:
    - system
    - 119.29.29.29
    - 223.5.5.5
  fallback:
    - 8.8.8.8
    - 1.1.1.1
  fallback-filter:
    geoip: true
    geoip-code: CN

proxies:

proxy-groups:
  - name: 🚀 Proxy
    type: select
    proxies: [🌏 Auto, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 🍎 Apple
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 🔍 Google
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 🪟 Microsoft
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 📺 ChinaMedia
    type: select
    proxies: [🎯 Direct, 🚀 Proxy]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 📽️ GlobalMedia
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 🤖 AI
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 🪙 Crypto
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 🎮 Game
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 📟 Telegram
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 🐠 Final
    type: select
    proxies: [🚀 Proxy, 🎯 Direct]
    url: https://www.gstatic.com/generate_204
    timeout: 5000

  - name: 🌏 Auto
    type: url-test
    proxies: []
    url: https://www.gstatic.com/generate_204
    interval: 600
    timeout: 5000

  - name: 🎯 Direct
    type: select
    proxies: [DIRECT, /""/]
    hidden: true

rule-providers:
  Apple:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple_Classical_No_Resolve.yaml,
      path: "./RuleProviders/Apple.yaml",
    }
  Google:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google_No_Resolve.yaml,
      path: "./RuleProviders/Google.yaml",
    }
  Microsoft:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Microsoft/Microsoft.yaml,
      path: "./RuleProviders/Microsoft.yaml",
    }
  GitHub:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml,
      path: "./RuleProviders/GitHub.yaml",
    }
  ChinaMedia:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/ChinaMedia/ChinaMedia_No_Resolve.yaml,
      path: "./RuleProviders/ChinaMedia.yaml",
    }
  HBO:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/HBO/HBO.yaml,
      path: "./RuleProviders/HBO.yaml",
    }
  Disney:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Disney/Disney.yaml,
      path: "./RuleProviders/Disney.yaml",
    }
  TikTok:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/TikTok/TikTok.yaml,
      path: "./RuleProviders/TikTok.yaml",
    }
  Netflix:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Netflix/Netflix_Classical_No_Resolve.yaml,
      path: "./RuleProviders/Netflix.yaml",
    }
  GlobalMedia:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GlobalMedia/GlobalMedia_Classical_No_Resolve.yaml,
      path: "./RuleProviders/GlobalMedia.yaml",
    }
  OpenAI:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/OpenAI/OpenAI_No_Resolve.yaml,
      path: "./RuleProviders/OpenAI.yaml",
    }
  Gemini:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Gemini/Gemini_No_Resolve.yaml,
      path: "./RuleProviders/Gemini.yaml",
    }
  Copilot:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Copilot/Copilot_No_Resolve.yaml,
      path: "./RuleProviders/Copilot.yaml",
    }
  Claude:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Claude/Claude_No_Resolve.yaml,
      path: "./RuleProviders/Claude.yaml",
    }
  Crypto:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Crypto/Crypto.yaml,
      path: "./RuleProviders/Crypto.yaml",
    }
  Cryptocurrency:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Cryptocurrency/Cryptocurrency.yaml,
      path: "./RuleProviders/Cryptocurrency.yaml",
    }
  Game:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Game/Game_No_Resolve.yaml,
      path: "./RuleProviders/Game.yaml",
    }
  Telegram:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Telegram/Telegram_No_Resolve.yaml,
      path: "./RuleProviders/Telegram.yaml",
    }
  Global:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Global/Global_Classical_No_Resolve.yaml,
      path: "./RuleProviders/Global.yaml",
    }
  Lan:
    {
      type: http,
      behavior: classical,
      format: yaml,
      interval: 86400,
      url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Lan/Lan_No_Resolve.yaml,
      path: "./RuleProviders/Lan.yaml",
    }

rules:
  - RULE-SET, Apple, 🍎 Apple
  - RULE-SET, Google, 🔍 Google
  - RULE-SET, Microsoft, 🪟 Microsoft
  - RULE-SET, GitHub, 🪟 Microsoft
  - RULE-SET, ChinaMedia, 📺 ChinaMedia
  - RULE-SET, HBO, 📽️ GlobalMedia
  - RULE-SET, Disney, 📽️ GlobalMedia
  - RULE-SET, TikTok, 📽️ GlobalMedia
  - RULE-SET, Netflix, 📽️ GlobalMedia
  - RULE-SET, GlobalMedia, 📽️ GlobalMedia
  - RULE-SET, OpenAI, 🤖 AI
  - RULE-SET, Gemini, 🤖 AI
  - RULE-SET, Copilot, 🤖 AI
  - RULE-SET, Claude, 🤖 AI
  - RULE-SET, Crypto ,🪙 Crypto
  - RULE-SET, Cryptocurrency ,🪙 Crypto
  - RULE-SET, Game, 🎮 Game
  - RULE-SET, Telegram, 📟 Telegram
  - RULE-SET, Global, 🚀 Proxy
  - RULE-SET, Lan, 🎯 Direct
  - GEOIP, CN, 🎯 Direct
  - MATCH, 🐠 Final
